processo tesi:

 lettura paper
 
 inizialmente legolas --> problema bias presenza della logica di controllo
 
 spostati su jvm fault specifici
 
 paper grayscope
 
 set up openEuler vm

 dettagli vm hw

 open euler struttura, funzionamento, e come interagito

 versione distirbuita di petclinic overview, perchè petclinic distribuito, jmeter load file configurazione (docker e docker compose) perchè rispetto a non container
 
 prometheus, grafana

 collegamento gala gopher e prometheus (stesso formato), metriche selezionate e perchè

 chaosblade overview per poi arrivare a cri

 microservizi che ho scelto per iniettare failure e perchè
 
 failure injection plan, quali ho scelto, perchè, approccio di granularità (fai riferimento ai paper)

 approccio network injection (non sul bridge ma sulla veth specifica del container che collega al bridge per isolare failure
 per ottenere gray failure simile))

 perchè spostato su server usi (oltre 30 thread problemi risorse)

 spostato fa virtualbox a kvm kemu per misconfigurazione tra linux header del server e virtualbox. il kernel del server è specifico
  (usato scp per VM transfer, installed libvm qemu-kvm, convertito i file e startata la nuova vm)
  creazione tunnel ssh per accedere alla visualizzazione della vm che gira sul server tramite SPICE usata con  Remote-Viewer/Virt-Viewer

parla dello stress plan di jmeter, e come è basato. 
  
partire test da 2h inizialmente con 40 threads, ma percentuale di errore sensibile. quindi abbassato a 35 threads per 2 ore.
parla dei calcoli sul traffico stimato di stressload

per mem e cpu stress modifica docker file per runnare chaosblade all-interno del container
  
